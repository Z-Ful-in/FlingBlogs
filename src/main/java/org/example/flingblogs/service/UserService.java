package org.example.flingblogs.service;


import org.example.flingblogs.model.User;
import org.example.flingblogs.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import java.util.Optional;

@Service
public class UserService {
    @Autowired
    private UserRepository userRepository;

    private final BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();

    public User register(String username, String password, String email){
        String encodedPassword = passwordEncoder.encode(password);
        User user = new User(
                null, // ID will be generated by the database
                username,
                encodedPassword,
                email,
                null // createAt will be set by the database
        );
        return userRepository.save(user);
    }

    public Optional<User> login(String username, String password){
        Optional<User> userOpt = userRepository.findByUsername(username);
        if(userOpt.isPresent() && passwordEncoder.matches(password, userOpt.get().getPassword())) {
            return userOpt;
        }
        return Optional.empty();
    }
}
